#summary PTF Custom Sensors: Overview of PTF Custom Sensors.
#labels Featured
#sidebar PTF_Sidebar

http://ptf-prtgaddons.googlecode.com/files/PTF_logo.png  http://ptf-prtgaddons.googlecode.com/files/wordle.png

On this page you will find an overview of *Standard* sensors.

The *Advanced XML* sensors can be found [http://code.google.com/p/prtg-addons/wiki/PTF_Custom_Sensors_XML here.]

====Latest versions:====
|| *Sensor* || *Description* || *Version* || *Date* || *PRTG* `*` || *Download* ||
||[#PassHashTool PassHashTool]||Scramble your password for PTF sensors.||1.0.1.2||21/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.PassHash%20Tool.zip here]||
||[#CheckPTFVersion CheckPTFVersion]||Compares your local PTF custom sensors with the last available versions.||8.0.3.1||12/02/2011||8.1||[http://prtg-addons.googlecode.com/files/PTF.CheckPTFVersion.zip here]||
||[#CompareTime CompareTime]||Compares the UTC time of the specified computer with the local UTC time.||8.0.1.1||15/02/2011||7.1||[http://prtg-addons.googlecode.com/files/PTF.CompareTime.zip here]||
||[#ContactState ContactState]||Returns the state of a dry contact connected to a serial port.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.ContactState.zip here]||
||[#CSVExport CSVExport]||Exports sensor data to a csv file.||8.0.4.1||03/05/2011||7.1||[http://prtg-addons.googlecode.com/files/PTF.CSVExport.zip here]||
||[#EmailRoundTrip EmailRoundTripPop]||Alternative email roundtrip sensor.||8.0.2.1||19/04/2011||7.1||[http://prtg-addons.googlecode.com/files/PTF.EmailRoundTripPop.zip here]||
||[#EventlogReader EventlogReader]||Gets the value of the most recent event log entry for the given source.||9.0.1.1||14/12/2011||7.1||[http://prtg-addons.googlecode.com/files/PTF.EventlogReader.zip here]||
||[#ExternalIP ExternalIP]||Gets the ISP-assigned IP address of the Probe.||8.0.1.1||19/06/2011||8.2||[http://prtg-addons.googlecode.com/files/PTF.ExternalIP.zip here]||
||[#HTTPContent HTTPContent]||Checks for HTTP content changes.||8.0.1.1||17/08/2011||8.2||[http://prtg-addons.googlecode.com/files/PTF.HTTPContent.zip here]||
||[#MediaStreamer MediaSteamer]||Monitor media streams.||1.0.5.1||23/11/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.MediaStreamer.zip here]||
||[#NetworkFileCount NetworkFileCount]||Returns the number of files on a \\Server\Share||8.0.2.1||14/10/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.NetworkFileCount.zip here]||
||[#PingWarning PingWarning]||Pings a device and goes into a warning state if no reply is received.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.PingWarning.zip here]||
||[#ReadFile ReadFile]||Reads a file into memory and returns the number of bytes/sec.||8.0.1.1||07/09/2011||7.1||[http://prtg-addons.googlecode.com/files/PTF.ReadFile.zip here]||
||[#SensorCount SensorCount]||Counts your PRTG sensors with a specified state.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.SensorCount.zip here]||
||[#SensorStatus SensorStatus]||Returns a warning state if a sensor state has changed into one of the given statuses.||8.0.1.1||06/03/2011||8.2||[http://prtg-addons.googlecode.com/files/PTF.SensorStatus.zip here]||

`*` This is the minimum PRTG version that is required for this sensor

== Overview ==
http://ptf-prtgaddons.googlecode.com/files/Sensors1.png


== General ==
All Custom Sensors listed target the _.Net Framework 2.0_. (unless stated otherwise)

Copy the .exe file to the "\Custom Sensors\EXE" folder of your PRTG Network Monitor installation. You can manually launch the .exe for an explanation of the parameters required

----

== !PassHashTool ==
=== Summary ===
This tool can be used in combination with PTF sensors that require a users password to be entered in the sensors settings section. The !PassHash can be used instead off the given password. [http://code.google.com/p/prtg-addons/wiki/PTF_CS_PassHashTool details]

 back to [#Latest_versions: top]

=== Version history === 
====1.0.1.2 _21/09/2010_====
 * First public version

----

== CheckPTFVersion ==
=== Summary ===
This sensor compares your local PTF custom sensors with the last available versions.

This sensor requires no parameters!

 back to [#Latest_versions: top]


=== Version history ===
====8.0.3.1 _12/02/2011_====
 * New: added support for EXEXML sensors.
====8.0.2.1 _17/10/2010_====
 * Bugfix: The sensor did not report an update of the !MediaStream sensor as that one is published as !MediaStreamer.
====8.0.1.1 _04/10/2010_====
 * First public version

----

== !CompareTime ==
=== Summary ===
This sensor compares the UTC time of the specified computer with the local UTC time.
{{{
-c=computer        The ip-address or hostname of the computer to get the UTC time from.
-u=username        Optional the name of the user account that has access to the computer via WMI service.
-p=password        Optional the password or passhash(*) of the user account that has access to the computer via WMI service.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _15/02/2011_====
 * First public version

----


== !ContactState ==
=== Summary ===
This sensor monitors the state of a dry contact connected to a serial port.
More [http://code.google.com/p/prtg-addons/wiki/PTF_CS_ContactState details]
{{{
-s=SerialPort -p=PinNumber [-om=OpenMessage] [-cm=ClosedMessage]
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== CSVExport ==
=== Summary ===
This sensor exports the data of a sensor to a .csv or .xml file.
More [http://code.google.com/p/prtg-addons/wiki/PTF_CS_CSVExport details]
{{{
-pu=demo -pp=demodemo -ps=https://prtg.paessler.com -s=2008
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.4.1 _04/05/2011_====
 * Bugfix: -av= parameter was not working as expected.
 * Bugfix: in some situations the separator used in the last line of a CSV file could differ from the other lines.
====8.0.3.1 _19/04/2011_====
 * New: added parameter -av= Average interval in seconds; use 0 to download raw data (= results of all single monitoring requests)
====8.0.2.1 _04/04/2011_====
 * New: added parameter -ssl3 to force a ssl3 connection to your PRTG server.
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !EmailRoundTrip ==
=== Summary ===
This Custom Sensor sends an email using your local email server to a roundtrip address and reports the time it takes for the email to return.

Enter the credentials (username and password), emailserver and other settings in the Parameters section of the Sensor Settings:
{{{
-to=  Address to send the mail to.
-fr=  From address of the mail to send.
-u=   Username of the mailbox to check for incomming mail.
-p=   Password or PassHash * of the mailbox to check for incomming mail.
-s=   Mailserver for sending and receiving emails.
-pp=  Optional mailserver POP port. If omitted port 110 is used as default.
-sp=  Optional mailserver SMTP port. If omitted port 25 is used as default.
-ssl  Optional use a ssl connection to connect to your mailserver.
-t=   Optional timeout in seconds. If omitted a timeout of 10 seconds is used as default.
}}}

How does this sensor differ from [http://www.paessler.com/blog/2010/04/15/prtg-7/prtgs-email-round-trip-sensor-and-google-mail PRTG's own] email roundtrip sensor?

 * This sensor does not have to wait for the email to return, but processes the received email from the previous run of the sensor.
 * Fast response times, freeing up resources more quickly.
 * Roundtrip time is calculated by examining the email headers.
 * “Missed” email responses that come in to late are automatically deleted, keeping the users mailbox cleaned up.
 * The unique identifier is not in the email subject but in the email header, reducing the chance of the email getting caught by a spam filter.


 back to [#Latest_versions: top]

=== Version history ===
====8.0.2.1 _19/04/2011_====
 * First public version

----

== !EventlogReader ==

=== Summary ===
This Custom Sensor gets the value of the most recent event log entry for the given source.

Enter the machinename, eventlog and source in the Parameters section of the Sensor Settings:

{{{
-c=   The ip-address or hostname of the computer hosting the eventlog.
-e=   The name of the eventlog.
-s=   The name of the eventlog source.
-u=   Optional, Domain\Username of a user account that can access the (remote) eventlog.
-p=   Optional, Password or PassHash * of a user account that can access the (remote) eventlog.
-m=   Optional, the maximum time in minutes a result is allowed to be old.
      default = 1 day (1440 minutes)
}}}

 back to [#Latest_versions: top]

=== Version history ===
====9.0.1.1 _14/12/2011_====
 * First public version

----

== ExternalIP ==

=== Summary ===
This Custom Sensor gets the ISP-assigned IP address of the Probe.

This sensor requires no parameters.

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _19/06/2011_====
 * First public version

----

== HTTPContent ==
=== Summary ===
This Custom Sensor Checks for HTTP content changes.
If the content has changed from the previous run of the sensor, the sensor returns the value 1 else the sensor returns the value 0

Enter the url and optional proxy settings in the Parameters section of the Sensor Settings:

{{{
-u=    The url to check.
-ps=   Optional proxyserver to use connecting to the internet.
-pd=   Optional proxydomain domain name to connect to your proxyserver.
-pu=   Optional proxyuser to connect to your proxyserver.
-pp=   Optional proxypassword or passhash * to connect to your proxyserver.    
}}}


 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _17/08/2011_====
 * First public version

----

== !LogfileReader ==
=== Summary ===
This Custom Sensor returns whether a specified string occurs in a (log) file. The last occurrence is remembered, so if a new entry is made with the specified string, the sensor will recognize the new entry.

Enter the credentials (username and password), filename and searchstring in the Parameters section of the Sensor Settings:
{{{
-u=username -p=password|passhash -f="c:\file location\log.txt" -s="String to search"
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !MediaStreamer ==
=== Summary ===
This Custom Sensor returns a monitored value of a mediastream.

The download consists in two .exe files. *!MediaStreamer.exe* is an application that constantly monitors your streams and *!MediaStream.exe* is the Custom Sensor that queries 
the !MediaStreamer and reports the result to your PRTG Server. More [http://code.google.com/p/prtg-addons/wiki/PTF_CS_MediaStreamer details]

=== Prerequisites ===
*!MediaStreamer*
 * .NET Framework 3.5
 * Microsoft Media Player
 * Adobe Flash Player

*!MediaStream*
 * .NET Framework 2.0

For the Custom Sensor enter the ip or dns name of the computer running PTF.!MediaStreamer, the number of the player, the index number of the property to return the value for and optional credentials (username and password) to access the c$ of the computer running PTF.!MediaStreamer:
{{{
-c=computer -pl=playernumber/playername -ix=property index [-tw=xx] [-u=username] [-p=password|passhash]

-c=    IP-Address or DNS name of the computer running PTF.MediaStreamer.
-pl=   The number of the player to query.
-ix=   The index of the players property to return the value for.
-tw=   Optional, the number of seconds to wait for a responce from the MediaStreamer (default = 30)
-u=    Optional, Domain\Username of a user that can access the c drive of the computer running PTF.MediaStreamer.
-p=    Optional, Password or passhash of a user that can access the c drive of the computer running PTF.MediaStreamer.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====1.0.5.1 _23/11/2010_====
 * Changed: Renewed user interface.
 * Changed: Players are more responsive.
 * Changed: Improved user interface responsiveness when players are playing.
 * Changed: The -pl= parameter can now also hold the player name instead off the player number
 * New: Option to import and export players to/from a csv file. This can be used for safe keeping (backup) or cloning to other probes.
 * New: Option to automatically restart the application once a day. 
 * ====Thanks to Laurie Collins for testing and her constructive feedback.====
====1.0.4.1 _05/11/2010_====
 * Changed: The streams are not playing continuously anymore but only by request of the sensor, reducing the CPU load.
====1.0.3.1 _17/10/2010_====
 * Bugfix: After starting the !MediaStreamer the application could produce an error that the application has stopped responding.
 * Bugfix: Improved error handling.
 * New: Sreams are automatically restarted if the frame rate property does not respond anymore (This is checked with a build in 15 sec watchdog).
 * New: If a player cannot respond to a request it returns an error “Check player”. 
 * New:	Included the “CPU load %” in the lower right-hand corner of the main form.
 * New: Every sensor request is now handled in a separate thread on the !MediaStreamer.
 * New:	Status “ready” now resets the player.
====1.0.2.1 _21/09/2010_====
 * New: Added an option to not show the Flash video image, reducing cpu load.
====1.0.1.1 _17/09/2010_====
 * First public version

----

== !NetworkFileCount ==
=== Summary ===
This Custom Sensor returns the number of files available on a server\share.
As your PRTG server runs under the local system account it can't access files on a \\server\share. This sensor uses the given username and password of a valid user account that can access the files and returns the number of files.

Enter the credentials (username and password), folder (and optional search filter and setting to also search the sub folders) in the Parameters section of the Sensor Settings:
{{{
-f=\\myserver\myshare [-u=username] [-p=password|passhash]  [-s=*.exe] [-sub] [-t=10] [-tiw]

-f=folder          The name of the folder that needs to be checked in a \\server\share format. If the foldername contains white spaces, enter the foldername between " ".
-u=username        Optional the name of the user account that can access the share.
-p=password        Optional the password or passhash(*) of the user account that can access the share.
-t=timedelta       Optional the minimum number of minutes a file has to be old before it is counted.	
-s=searchpattern   Optional the search pattern to be used (i.e. *.txt).
-sub               Optional switch to include subfolders.
-tiw               Optional, in combination with the -t= parameter, creates a time window between the current time and xx minutes ago. Only files created in that period are counted.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !ReadFile ==
=== Summary ===
Reads a file into memory and returns the number of bytes/sec.

{{{
-f=file [-u=username] [-p=password]

-f=     The file to read.
-u=     Optional domain\user to read the file.
-p=     Optional password or passhash * to read the file.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _07/09/2011_====
 * First public version

----

== !SensorCount ==
=== Summary ===
This sensor counts the number of sensors on your PRTG server.

{{{
-s=192.168.1.1 -u=username -p=password|passhash [-r=rootID]
}}}
Combine any of the following parameters
{{{
-u    count up sensors
-d    count down sensors
-a    count acknowledged down sensors
-w    count warning sensors
-u    count unusual sensors
-p    count paused sensors
-k    count unknown sensors
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1


----

== !SensorStatus ==
=== Summary ===
This sensor returns a warning state if a sensor state has changed into one of the given statuses.

{{{
-u=username -p=password|passhash [-s=statusses] [-r=rootID]

-u=		PRTG Username.
-p=		PRTG Password.
-s=		Optional, comma seperated list of statuses to monitor (default=7,12,13  'Paused by user', 'Paused "until' and 'Down Acknowledged'.
-r=		Optional, the rootID of the probe or group you want to monitor (default = 0).
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _06/03/2011_====
 * First public version

----