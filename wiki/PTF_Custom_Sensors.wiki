#summary PTF Custom Sensors: Overview of PTF Custom Sensors.
#sidebar PTF_Sidebar

http://ptf-prtgaddons.googlecode.com/files/PTF_logo.png  http://ptf-prtgaddons.googlecode.com/files/wordle.png

====Latest versions:====
|| *Sensor* || *Description* || *Version* || *Date* || *PRTG* `*` || *Download* ||
||[#PassHashTool PassHashTool]||Scramble your password for PTF sensors.||1.0.1.2||21/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.PassHash%20Tool.zip here]||
||[#ADSReplFailures ADSReplFailures]||Checks your domain controllers for replication errors.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.ADSReplFailures.zip here]||
||[#CheckDHCP CheckDHCP]||Returns the response time of a DHCP server.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.CheckDHCP.zip here]||
||[#CheckPRTGVersion CheckPRTGVersion]||Compares your local PRTG version number with the last available version.||8.0.2.1||19/11/2010||8.1||[http://prtg-addons.googlecode.com/files/PTF.CheckPRTGVersion.zip here]||
||[#CheckPTFVersion CheckPTFVersion]||Compares your local PTF custom sensors with the last available versions.||8.0.2.1||17/10/2010||8.1||[http://prtg-addons.googlecode.com/files/PTF.CheckPTFVersion.zip here]||
||[#ContactState ContactState]||Returns the state of a dry contact connected to a serial port.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.ContactState.zip here]||
||[#CSVExport CSVExport]||Exports sensor data to a csv file.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.CSVExport.zip here]||
||[#EmailCount EmailCount]||Returns the total number of emails in the inbox of an email account||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.EmailCount.zip here]||
||[#FTPFileCount FTPFileCount]||Returns the number of files on a FTP server.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.FTPFileCount.zip here]||
||[#INIFileValue INIFileValue]||Returns the value from the field of an ini-file.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.INIFileValue.zip here]||
||[#IPonDNSBL IPonDNSBL]||Checks the given IP-Address agains a number of blacklist servers||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.IPonDNSBL.zip here]||
||[#LastWinUpdate LastWinUpdate]||Gets the last time Windows Update has updated the specified computer.||8.0.2.1||07/10/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.LastWinUpdate.zip here]||
||[#LogfileReader LogfileReader]||Returns the last occurrence of a specified string in a (log) file||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.LogfileReader.zip here]||
||[#MediaStreamer MediaSteamer]||Monitor media streams.||1.0.5.1||23/11/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.MediaStreamer.zip here]||
||[#MessageCount MessageCount]||Returns the number of messages in a MSMQ.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.MessageCount.zip here]||
||[#NetworkFileCount NetworkFileCount]||Returns the number of files on a \\Server\Share||8.0.2.1||14/10/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.NetworkFileCount.zip here]||
||[#PingDelayedUp PingDelayedUp]||Stays down for the given number of seconds before returning an Ok state.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.PingDelayedUp.zip here]||
||[#PingJitter PingJitter]||Returns the Statistical Jitter value of a host.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.PingJitter.zip here]||
||[#PingWarning PingWarning]||Pings a device and goes into a warning state if no reply is received.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.PingWarning.zip here]||
||[#PrintQueue PrintQueue]||Returns the number of jobs in a printqueue.||8.0.2.1||02/10/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.PrintQueue.zip here]||
||[#SensorCount SensorCount]||Counts your PRTG sensors with a specified state.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.SensorCount.zip here]||
||[#SSLCertExpiration SSLCertExpiration]||Returns the number of days left before your SSL certificate expires.||8.0.2.1||26/11/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.SSLCertExpiration.zip here]||
||[#TraceRoute TraceRoute]||Gets the number of hops to a target and alerts if the route has changed.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.TraceRoute.zip here]||
||[#UserLoggedin UserLoggedin]||Returns the number of users loggedin on a computer.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.UserLoggedin.zip here]||
||[#WinOSVersion WinOSVersion]||Gets the Windows OS version of the specified computer.||8.0.1.1||22/09/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.WinOSVersion.zip here]||
||[#XMLValue XMLValue]||Gets a xml file from a server and returns the value of a xml node.||8.0.3.1||26/11/2010||7.1||[http://prtg-addons.googlecode.com/files/PTF.XMLValue.zip here]||

`*` This is the minimum PRTG version that is required for this sensor


== Overview ==
http://ptf-prtgaddons.googlecode.com/files/PTFSensors.png

== General ==
All Custom Sensors listed target the _.Net Framework 2.0_. (unless stated otherwise)

Copy the .exe file to the "\Custom Sensors\EXE" folder of your PRTG Network Monitor installation. You can manually launch the .exe for an explanation of the parameters required

----

== !PassHashTool ==
=== Summary ===
This tool can be used in combination with PTF sensors that require a users password to be entered in the sensors settings section. The !PassHash can be used instead off the given password. [PTF_CS_PassHashTool details]

 back to [#Latest_versions: top]

=== Version history === 
====1.0.1.2 _21/09/2010_====
 * First public version

----

== ADSReplFailures ==
=== Summary ===
This sensor gets the number of replication errors from your domain controllers.

 back to [#Latest_versions: top]

{{{
-d=domain name (FQDN) [-u=username] [-p=password|passhash] 

-d=domain name     The Full Qualified Domain Name.
-u=username        Optional the name of the user account that has access to the AD replication.
-p=password        Optional the password or passhash(*) of the user account that has access to the AD replication.
}}}


=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== CheckDHCP ==
=== Summary ===
This sensor checks your DHCP server and returns the response time.

 back to [#Latest_versions: top]

{{{
-s=192.168.1.1
}}}


=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== CheckPRTGVersion ==
=== Summary ===
This sensor compares your local PRTG version number with the last version available for download.

 back to [#Latest_versions: top]

{{{
192.168.1.1 [-ssl]

-ssl	Optional use a ssl connection to connect to your PRTG server.
}}}


=== Version history ===
====8.0.2.1 _19/11/2010_====
 * New: added parameter -ssl3 to force a ssl3 connection to your PRTG server.
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== CheckPTFVersion ==
=== Summary ===
This sensor compares your local PTF custom sensors with the last available versions.

This sensor requires no parameters!

 back to [#Latest_versions: top]


=== Version history ===
====8.0.2.1 _17/10/2010_====
 * Bugfix: The sensor did not report an update of the !MediaStream sensor as that one is published as !MediaStreamer.
====8.0.1.1 _04/10/2010_====
 * First public version

----


== !ContactState ==
=== Summary ===
This sensor monitors the state of a dry contact connected to a serial port.
More [PTF_CS_ContactState details]
{{{
-s=SerialPort -p=PinNumber [-om=OpenMessage] [-cm=ClosedMessage]
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== CSVExport ==
=== Summary ===
This sensor exports the data of a sensor to a .csv or .xml file.
More [PTF_CS_CSVExport details]
{{{
-pu=demo -pp=demodemo -ps=https://prtg.paessler.com -s=2008
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !EmailCount ==
=== Summary ===
This Custom Sensor returns the total number of messages in a users inbox.

Enter the credentials (username and password) and emailserver in the Parameters section of the Sensor Settings:
{{{
-u=username -p=password|passhash -s=emailserver [-o=serverport -ssl]

example:
-s=balu.krijco.loc -u=john -p=****
or
-s=pop.gmail.com -u=john@gmail.com -p=***** -o=995 -ssl
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== FTPFileCount ==
=== Summary ===
This Custom Sensor returns the number of files available on a FTP server.

Enter the credentials (username and password) and the url in the Parameters section of the Sensor Settings:
{{{
-u=username -p=password|passhash ftp://10.0.0.10/upload
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== INIFileValue ==
=== Summary ===
This sensor returns the value from the field of a .ini file

Enter the credentials (username and password), filename, section name and field name in the Parameters section of the Sensor Settings:
{{{
-u=username -p=password|passhash -f=C:\Windows\win.ini -s=Mail -d=MAPI
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1


----

== IPonDNSBL ==
=== Summary ===
This sensor checks a IP-Address against a number of blacklist servers
and returns the number of DNS Blacklists the IP-Address is on.

You can optionally provide a comma seperated list of blacklist servers.
if omitted, the following blacklist servers are used:
sbl-xbl.spamhaus.org, bl.spamcop.net, dnsbl.njabl.org,
list.dsbl.org and multihop.dsbl.org.

The readme.txt includes a list of optional blacklist servers.

{{{
-ip=ip-address [-bl=blacklist servers]
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !LastWinUpdate ==
=== Summary ===
This sensor gets the last time Windows Update has updated the specified computer.

{{{
-c=192.168.1.1 [-s=Remote Registry service name] [-u=username] [-p=password|passhash] 
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.3.1 _11/10/2010_====
 * Changed: Replaced the "Object not set to instance" error with a more explaining message.
====8.0.2.1 _08/10/2010_====
 * Changed: Added the optional -s= parameter for localization purposes. This parameter allows you to supply the name of the Remote Registry service on the local OS, for a German OS this would be -s=Remote-Registrierungsdienst.
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !LogfileReader ==
=== Summary ===
This Custom Sensor returns whether a specified string occurs in a (log) file. The last occurrence is remembered, so if a new entry is made with the specified string, the sensor will recognize the new entry.

Enter the credentials (username and password), filename and searchstring in the Parameters section of the Sensor Settings:
{{{
-u=username -p=password|passhash -f="c:\file location\log.txt" -s="String to search"
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !MediaStreamer ==
=== Summary ===
This Custom Sensor returns a monitored value of a mediastream.

The download consists in two .exe files. *!MediaStreamer.exe* is an application that constantly monitors your streams and *!MediaStream.exe* is the Custom Sensor that queries 
the !MediaStreamer and reports the result to your PRTG Server. More [PTF_CS_MediaStreamer details]

=== Prerequisites ===
*!MediaStreamer*
 * .NET Framework 3.5
 * Microsoft Media Player
 * Adobe Flash Player

*!MediaStream*
 * .NET Framework 2.0

For the Custom Sensor enter the ip or dns name of the computer running PTF.!MediaStreamer, the number of the player, the index number of the property to return the value for and optional credentials (username and password) to access the c$ of the computer running PTF.!MediaStreamer:
{{{
-c=computer -pl=playernumber/playername -ix=property index [-tw=xx] [-u=username] [-p=password|passhash]

-c=    IP-Address or DNS name of the computer running PTF.MediaStreamer.
-pl=   The number of the player to query.
-ix=   The index of the players property to return the value for.
-tw=   Optional, the number of seconds to wait for a responce from the MediaStreamer (default = 30)
-u=    Optional, Domain\Username of a user that can access the c drive of the computer running PTF.MediaStreamer.
-p=    Optional, Password or passhash of a user that can access the c drive of the computer running PTF.MediaStreamer.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====1.0.5.1 _23/11/2010_====
 * Changed: Renewed user interface.
 * Changed: Players are more responsive.
 * Changed: Improved user interface responsiveness when players are playing.
 * Changed: The -pl= parameter can now also hold the player name instead off the player number
 * New: Option to import and export players to/from a csv file. This can be used for safe keeping (backup) or cloning to other probes.
 * New: Option to automatically restart the application once a day. 
 * ====Thanks to Laurie Collins for testing and her constructive feedback.====
====1.0.4.1 _05/11/2010_====
 * Changed: The streams are not playing continuously anymore but only by request of the sensor, reducing the CPU load.
====1.0.3.1 _17/10/2010_====
 * Bugfix: After starting the !MediaStreamer the application could produce an error that the application has stopped responding.
 * Bugfix: Improved error handling.
 * New: Sreams are automatically restarted if the frame rate property does not respond anymore (This is checked with a build in 15 sec watchdog).
 * New: If a player cannot respond to a request it returns an error “Check player”. 
 * New:	Included the “CPU load %” in the lower right-hand corner of the main form.
 * New: Every sensor request is now handled in a separate thread on the !MediaStreamer.
 * New:	Status “ready” now resets the player.
====1.0.2.1 _21/09/2010_====
 * New: Added an option to not show the Flash video image, reducing cpu load.
====1.0.1.1 _17/09/2010_====
 * First public version

----

== !MessageCount ==
=== Summary ===
This sensor gets the number of messages in a MSMQ.
Use the -t parameter to only count messages that are more than xx minutes old.

{{{
-u=[domain\]username -p=password|passhash -qn=queuename [-qt=queuetype] [-m=machinename] [-t=timedelta]
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !NetworkFileCount ==
=== Summary ===
This Custom Sensor returns the number of files available on a server\share.
As your PRTG server runs under the local system account it can't access files on a \\server\share. This sensor uses the given username and password of a valid user account that can access the files and returns the number of files.

Enter the credentials (username and password), folder (and optional search filter and setting to also search the sub folders) in the Parameters section of the Sensor Settings:
{{{
-f=\\myserver\myshare [-u=username] [-p=password|passhash]  [-s=*.exe] [-sub] [-t=10] [-tiw]

-f=folder          The name of the folder that needs to be checked in a \\server\share format. If the foldername contains white spaces, enter the foldername between " ".
-u=username        Optional the name of the user account that can access the share.
-p=password        Optional the password or passhash(*) of the user account that can access the share.
-t=timedelta       Optional the minimum number of minutes a file has to be old before it is counted.	
-s=searchpattern   Optional the search pattern to be used (i.e. *.txt).
-sub               Optional switch to include subfolders.
-tiw               Optional, in combination with the -t= parameter, creates a time window between the current time and xx minutes ago. Only files created in that period are counted.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !PingDelayedUp ==
=== Summary ===
This ping sensor stays down for the given number of seconds before returning an Ok state.

Use this sensor as the master dependency instead off the normal PING sensor as the normal one usually responds before many services do.

{{{
ip-address|hostname -id-sensorID -d=delay [-w=timeout] [-l=size] [-i=TTL]

-id=sensorID       The sensorID or other unique identifier.
-d=delay           The delay in seconds before returning an "Ok" state
-w=timeout         Optional timeout in miliseconds to wait for a reply, default = 500
-l=size            Optional send buffer size, default = 32 bytes
-i=TTL             Optional Time To Live, default = 64   
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !PingJitter ==
=== Summary ===
This sensor sends a number of ping requests to the host
and returns the Statistical Jitter value in milliseconds.

{{{
192.168.1.1 [-n=5] [-d]
-n=   number of ping requests to send, default = 5
-d    debugmode, write all results to the output window
      note: do NOT use this switch when running the .exe as a sensor   
}}}

Note:
The sensor needs to be setup as "Value Type" Float 

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !PingWarning ==
=== Summary ===
This sensor pings a device and goes into a warning state if no reply is received.

Enter the ip-address|DNSname and optional parameters in the Parameters section of the Sensor Settings (_you can also use the %host placeholder to refer to the ip-address|DNSname of the parent device_):
{{{
192.168.1.1 [-w=500] [-i=64] [-l=32]
or
%host [-w=500] [-i=64] [-l=32]
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !PrintQueue ==
=== Summary ===
Returns the number of jobs in a printqueue

*Note:* 
 * This sensor targets the .NET Framework 3.0
 * If your printqueue name contains spaces, add a leading and trailing " like -q="my print queue"

{{{
-s=printserver -q=printqueue [-t=time] [-u=username] [-p=password|passhash]

-s=    The ip-address or hostname of the printserver.
-q=    The name of the printqueue.
-t=    Optional the minimum time the job has to be in the queue in seconds.
-r     Optional switch to set the sensor in a warning state when the queue or printer reports a problem.
       (Door open, Manual feed required, Offline, Out of memory, Out of paper, Paper jammed, Toner low and more)
-u=    Optional Domain\Username.
-p=    Optional Password or PassHash.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.2.1 _02/10/2010_====
 * Changed: changed the name from PrintJob to PrintQueue
 * New: optional switch -r sets the sensor in a warning state when the queue or printer reports a problem.
====8.0.1.1 _24/09/2010_====
 * First public version.


----

== !SensorCount ==
=== Summary ===
This sensor counts the number of sensors on your PRTG server.

{{{
-s=192.168.1.1 -u=username -p=password|passhash [-r=rootID]
}}}
Combine any of the following parameters
{{{
-u    count up sensors
-d    count down sensors
-a    count acknowledged down sensors
-w    count warning sensors
-u    count unusual sensors
-p    count paused sensors
-k    count unknown sensors
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== SSLCertExpiration ==
=== Summary ===
This sensor returns the number of days left before your SSL certificate expires

{{{
-u=https://prtg.paessler.com [-ssl3]
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.2.1 _26/11/2010_====
 * New: added optional switch -ssl3 to force a ssl3 connection.
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1


----

== !TraceRoute ==
=== Summary ===
This sensor performs a trace route to the target and returns the number of hops.
With the optional -w and -e switches the sensor can go into a warning or error state if the route has changed,
since the last run of the sensor, regardless of the number of hops.

The sensorID parameter has to be an unique value as it is used to store the last trace result.
As of PRTG V7.3.2 the %sensorid placeholder is available, so -id=%sensorid will do the trick.

{{{
-id=sensorID -t=target [-w] [-e]

-id=sensorID       The sensorID or other unique identifier.
-t=target          The IP address or hostname of the machine to trace the route to.
-w                 Optional switch to set the sensor in a warning state if the route has changed.
-e                 Optional switch to set the sensor in an error state if the route has changed.
}}}

 back to [#Latest_versions: top]


=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !UserLoggedin ==
=== Summary ===
This sensor gets the number of users that are loggedin on a computer directly or via a RDP session.

You can optionally provide a comma seperated list of users to check if a specific user is loggedin or *not* loggedin.


{{{
-c=computer -u=username -p=password|passhash [-f=filter][-fx] [-fi]

-c=computer        The ip-address or hostname of the computer to monitor.
-u=username        The name of the user account that has access to the computer via WMI service.
-p=password        The password or passhash(*) of the user account that has access to the computer via WMI service.
-f=filter          Optional filter to not or only count the users specified (comma seperated list).
-fx                Optional switch, users in the filter are not counted (default).
-fi                Optional switch, only users in the filter are counted.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== WinOSVersion ==
=== Summary ===
This sensor gets the Windows OS version of the specified computer.
{{{
-u=domain\username -p=password|passhash -c=192.168.1.1
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== XMLValue ==
=== Summary ===
Gets a xml file from a server and returns the value or number of occurrences of a xml node. More [http://www.paessler.com/knowledgebase/en/topic/11603-can-i-consume-restful-xml-http-apis-with-prtg-i-e-use-their-results-as-sensor-values details]
{{{
-u=url -n=nodename [-t=xx] [-c] [-c] [-cc] [-cs] [-rm=,] [-cm="My custom message"]

-u=   The url that returns the xml document.
-n=   The name of the xml node to check.
-t=   Optional the number of seconds to wait for a responce from the server (default = 15 sec).
-c    Optional switch to count the number of occurrences of the xml node.
-cc   Optional switch to count the number of childnodes of the xml node.
-cs   Optional switch to count the number of sibbelings of the xml node.
-rc=  Optional the characters to remove from the xml value (i.e. to remove a thousands seperator from the result use -rc=,)
-cm=  Optional a custom message to be displayed (i.e. -cm="There are %1 tickets in our ticketing system." where %1 will be replaced with the xml value).
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.3.1 _26/11/2010_====
 * New: added optional switch -ssl3 to force a ssl3 connection.
====8.0.2.1 _08/11/2010_====
 * Bugfix: The custom message did not work when counting xml nodes using the -c, -cc or -cs switch
====8.0.1.1 _08/11/2010_====
 * First public version

----