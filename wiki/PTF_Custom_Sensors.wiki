#summary PTF Custom Sensors: Overview of PTF Custom Sensors.
#labels Featured
#sidebar PTF_Sidebar

http://ptf-prtgaddons.googlecode.com/files/PTF_logo.png  http://ptf-prtgaddons.googlecode.com/files/wordle.png [https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=Q3245R67RWV6U http://ptf-prtgaddons.googlecode.com/files/donate2.png]

On this page you will find an overview of *Standard* sensors.

The *Advanced XML* sensors can be found [http://code.google.com/p/prtg-addons/wiki/PTF_Custom_Sensors_XML here.]

====Latest versions:====
|| *Sensor* || *Description* || *Version* || *Date* || *Download* ||
||[#PassHashTool PassHashTool]||Scramble your password for PTF sensors.||1.0.1.2||21/09/2010||[http://prtg-addons.googlecode.com/files/PTF.PassHash%20Tool.zip here]||
||[#Azure Azure]||Gets the XML result from a Service Management Resource of an Azure account.||9.0.5||08/02/2012||[http://prtg-addons.googlecode.com/files/Azure.zip here]||
||[#CheckPTFVersion CheckPTFVersion]||Compares your local PTF custom sensors with the last available versions.||8.0.3.1||12/02/2011||[http://prtg-addons.googlecode.com/files/PTF.CheckPTFVersion.zip here]||
||[#CheckTimeSNMP CheckTimeSNMP]||Compares the time of the device with the local probe using SNMP.||13.1.2.2||02/03/2013||[http://prtg-addons.googlecode.com/files/PTF.CheckTimeSNMP.zip here]||
||[#CompareTime CompareTime]||Compares the UTC time of the specified computer with the local UTC time.||8.0.1.1||15/02/2011||[http://prtg-addons.googlecode.com/files/PTF.CompareTime.zip here]||
||[#ContactState ContactState]||Returns the state of a dry contact connected to a serial port.||12.3.1.1||20/09/2012||[http://prtg-addons.googlecode.com/files/PTF.ContactState.zip here]||
||[#CSVExport CSVExport]||Exports sensor data to a csv file.||12.3.2.2||22/07/2012||[http://prtg-addons.googlecode.com/files/PTF.CSVExport.zip here]||
||[#Ducksboard Ducksboard]||Pushes the result of another sensor to your Ducksboard.||13.1.3.3||13/03/2013||[http://prtg-addons.googlecode.com/files/PTF.Ducksboard.zip here]||
||[#EmailRoundTrip EmailRoundTripPop]||Alternative email roundtrip sensor.||8.0.2.1||19/04/2011||[http://prtg-addons.googlecode.com/files/PTF.EmailRoundTripPop.zip here]||
||[#EventlogReader EventlogReader]||Gets the value of the most recent event log entry for the given source.||12.2.1.1||27/06/2012||[http://prtg-addons.googlecode.com/files/PTF.EventlogReader.zip here]||
||[#ExternalIP ExternalIP]||Gets the ISP-assigned IP address of the Probe.||13.1.1.2||16/01/2013||[http://prtg-addons.googlecode.com/files/PTF.ExternalIP.zip here]||
||[#HTTPContent HTTPContent]||Checks for HTTP content changes.||8.0.1.1||17/08/2011||[http://prtg-addons.googlecode.com/files/PTF.HTTPContent.zip here]||
||[#NetworkFileCount NetworkFileCount]||Returns the number of files on a \\Server\Share||8.0.2.1||14/10/2010||[http://prtg-addons.googlecode.com/files/PTF.NetworkFileCount.zip here]||
||[#PingMacAddress PingMacAddress]||Pings a MAC address.||13.1.1.1||17/03/2013||[http://prtg-addons.googlecode.com/files/PTF.PingMacAddress.zip here]||
||[#PingWarning PingWarning]||Pings a device and goes into a warning state if no reply is received.||12.3.1.1||20/09/2012||[http://prtg-addons.googlecode.com/files/PTF.PingWarning.zip here]||
||[#PortState PortState]||Returns the number of seconds a TCP or UDP port is not responding.||12.3.1.1||20/09/2012||[http://prtg-addons.googlecode.com/files/PTF.PortState.zip here]||
||[#PSx64 PSx64]||Executes a Powershell script in 64 bit mode.||9.0.1.1||10/02/2012||[http://prtg-addons.googlecode.com/files/PTF.PSx64.zip here]||
||[#ReadFile ReadFile]||Reads a file into memory and returns the number of bytes/sec.||8.0.1.1||07/09/2011||[http://prtg-addons.googlecode.com/files/PTF.ReadFile.zip here]||
||[#SensorCount SensorCount]||Counts your PRTG sensors with a specified state.||8.0.2.1||14/03/2012||[http://prtg-addons.googlecode.com/files/PTF.SensorCount.zip here]||
||[#SensorStatus SensorStatus]||Returns a warning state if a sensor state has changed into one of the given statuses.||8.0.1.1||06/03/2011||[http://prtg-addons.googlecode.com/files/PTF.SensorStatus.zip here]||
||[#ServiceStatus ServiceStatus]||Retrieves the status of a Windows service.||9.0.1.1||07/03/2012||[http://prtg-addons.googlecode.com/files/PTF.ServiceStatus.zip here]||
||[#TLDomainExpiration TLDomainExpiration]||Returns the number of days before a .com, .net, .org, .info, .us or .biz domain registration expires.||13.1.1.4||24/02/2013||[http://prtg-addons.googlecode.com/files/PTF.TLDomainExpiration.zip here]||
||[#USBDevices USBDevices]||Returns the number of connected USB storage devices.||9.0.1.1||08/02/2012||[http://prtg-addons.googlecode.com/files/PTF.USBDevices.zip here]||


== Overview ==
http://ptf-prtgaddons.googlecode.com/files/Sensors1.png


== General ==
All Custom Sensors listed target the _.Net Framework 2.0_. (unless stated otherwise)

Copy the .exe file to the "\Custom Sensors\EXE" folder of your PRTG Network Monitor installation. You can manually launch the .exe for an explanation of the parameters required

----

== !PassHashTool ==
=== Summary ===
This tool can be used in combination with PTF sensors that require a users password to be entered in the sensors settings section. The !PassHash can be used instead off the given password. [http://code.google.com/p/prtg-addons/wiki/PTF_CS_PassHashTool details]

 back to [#Latest_versions: top]

=== Version history === 
====1.0.1.2 _21/09/2010_====
 * First public version

----

== Azure ==
=== Summary ===
This sensor Gets the XML result from a Service Management Resource of an Azure account.

{{{
-u=https://management.core.windows.net/<subscriptionId> -cn=certificatename -n=nodename [-t=xx] [-un=username] [-pw=password] [-ssl3] [-c] [-cc] [-cs] [-rm=,] [-cm="My custom message"]

-u=    The url that returns the xml document.
-cn=   The name of the certificate to use.
-n=    The name of the xml node to check.
-t=    Optional the number of seconds to wait for a responce from the server (default = 15 sec).
-un=   Optional username to authenticate the http connection.
-pw=   Optional password to authenticate the http connection.
-ssl3  Optional switch to force a ssl3 connection.
-c     Optional switch to count the number of occurrences of the xml node.
-cc    Optional switch to count the number of childnodes of the xml node.
-cs    Optional switch to count the number of sibbelings of the xml node.
-rc=   Optional the characters to remove from the xml value (i.e. to remove a thousands seperator from the result use -rc=,)
-cm=   Optional a custom message to be displayed (i.e. -cm="There are %1 tickets in our ticketing system." where %1 will be replaced with the xml value).
-ps=   Optional proxyserver to use connecting to the internet.
-pu=   Optional doamin\user to connect to your proxyserver.
-pp=   Optional password or passhash * to connect to your proxyserver.
}}}

Click [http://msdn.microsoft.com/en-us/library/windowsazure/ee460786.aspx here] for an explanation of the URL's that can be used addressing the Azure Service Management Resources:

*Note:* The certificate is the only means of authentication, if the wrong (type off) certificate is used or it is not correctly installed in the right store (there are some checks performed by the sensor of cause) the Azure server returns a “403 unauthorized”. The [http://code.google.com/p/prtg-addons/wiki/PTF_Tools_GenCert GenCert tool] can help you generating and installing a valid certificate.


 back to [#Latest_versions: top]


=== Version history ===
====9.0.5.1 _08/02/2012_====
 * First public version

----

== CheckPTFVersion ==
=== Summary ===
This sensor compares your local PTF custom sensors with the last available versions.

This sensor requires no parameters!


 back to [#Latest_versions: top]


=== Version history ===
====8.0.3.1 _12/02/2011_====
 * New: added support for EXE/XML sensors.
====8.0.2.1 _17/10/2010_====
 * Bugfix: The sensor did not report an update of the !MediaStream sensor as that one is published as !MediaStreamer.
====8.0.1.1 _04/10/2010_====
 * First public version

----

== CheckTimeSNMP ==
=== Summary ===
This sensor compares the time of the device with the local probe using SNMP.

Note:
When the target is a Windows PC, it has to support MIB value
iso.org.dod.internet.mgmt.mib-2.host.hrSystem.hrSystemDate.0 (.1.3.6.1.2.1.25.1.2.0)


{{{
-s=    IP or hostname of the device to check.
-c=    Optional, community string, default=public.
-v=    Optional, SNMP version (1,2,3), default=1.
-apc   Optional, switch to check an APC device (default is a Windows PC).
}}}

 back to [#Latest_versions: top]

=== Version history ===
====13.1.2.2 _02/03/2013_====
 * Revived public version

----

== !CompareTime ==
=== Summary ===
This sensor compares the UTC time of the specified computer with the local UTC time.
{{{
-c=computer        The ip-address or hostname of the computer to get the UTC time from.
-u=username        Optional the name of the user account that has access to the computer via WMI service.
-p=password        Optional the password or passhash(*) of the user account that has access to the computer via WMI service.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _15/02/2011_====
 * First public version

----


== !ContactState ==
=== Summary ===
This sensor monitors the state of a dry contact connected to a serial port.
More [http://code.google.com/p/prtg-addons/wiki/PTF_CS_ContactState details]
{{{
-s=SerialPort -p=PinNumber [-om=OpenMessage] [-cm=ClosedMessage]
}}}

 back to [#Latest_versions: top]

=== Version history ===
====12.3.1.1 _20/09/2012_====
 * Recompiled for changed error handling in PRTG 12.3.3
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== CSVExport ==
=== Summary ===
This sensor exports the data of a sensor to a .csv or .xml file.
More [http://code.google.com/p/prtg-addons/wiki/PTF_CS_CSVExport details]
{{{
-pu=demo -pp=demodemo -ps=https://prtg.paessler.com -s=2008
}}}

 back to [#Latest_versions: top]

=== Version history ===
====12.3.2.2 _22/07/2012_====
 * New: added optional parameter -to= Connection timeout to your PRTG server in seconds (default = 10 sec).
 * New: added optional parameter -fc= A comma seperated list of column names to be used as export filter. (e.g. -fc="datetime,value").
====8.0.4.1 _04/05/2011_====
 * Bugfix: -av= parameter was not working as expected.
 * Bugfix: in some situations the separator used in the last line of a CSV file could differ from the other lines.
====8.0.3.1 _19/04/2011_====
 * New: added parameter -av= Average interval in seconds; use 0 to download raw data (= results of all single monitoring requests)
====8.0.2.1 _04/04/2011_====
 * New: added parameter -ssl3 to force a ssl3 connection to your PRTG server.
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== Ducksboard ==
=== Summary ===
This sensor pushes the monitoring result of another sensor to Ducksboard.
See [http://kb.paessler.com/knowledgebase/en/topic/46843-how-can-i-publish-my-sensors-on-ducksboard this] KB article for more information.

Enter the parameters below in the Parameters section of the Sensor Settings:

{{{
-url=  The URL to your PRTG server (eg -url=https://myserver:myport)
-u=    PRTG Username.
-p=    PRTG Password or PassHash *.
-id=   The ObjectID of the sensor to publish on Ducksboard.
-ch=   Optional, a comma separated list of channel names of the sensor to publish on Ducksboard.
-key=  The Ducksboard API key for authentificaton.
-sl=   A comma separated list of Ducksboard widget slot names.
-s     Optional switch to publish the sensor status in combination with a 'custom status' widget.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====13.1.3.3 _13/03/2013_====
 * Changed: The –ch= parameter can now hold a comma separated list of channel names i.e. –ch=freespace,totalspace If channel names contain a white space it needs to be entered as –ch=”free space,total space”
 * Changed: The corresponding widget slot names are also provided as a comma separated list i.e. –sl=1234,5678 where 1234 is the freespace widget and 5678 is the totalspace widget.
 * New: Using the –s switch in combination with  a ‘custom status’ widget it will send the status of the source sensor (down, warning, up) to the widget.

====13.1.1.1 _29/01/2013_====
 * First public version

----

== !EmailRoundTrip ==
=== Summary ===
This Custom Sensor sends an email using your local email server to a roundtrip address and reports the time it takes for the email to return.

Enter the credentials (username and password), emailserver and other settings in the Parameters section of the Sensor Settings:
{{{
-to=  Address to send the mail to.
-fr=  From address of the mail to send.
-u=   Username of the mailbox to check for incomming mail.
-p=   Password or PassHash * of the mailbox to check for incomming mail.
-s=   Mailserver for sending and receiving emails.
-pp=  Optional mailserver POP port. If omitted port 110 is used as default.
-sp=  Optional mailserver SMTP port. If omitted port 25 is used as default.
-ssl  Optional use a ssl connection to connect to your mailserver.
-t=   Optional timeout in seconds. If omitted a timeout of 10 seconds is used as default.
}}}

How does this sensor differ from [http://www.paessler.com/manuals/prtg/smtp_pop3_round_trip_sensor.htm PRTG's own] email roundtrip sensor?

 * This sensor does not have to wait for the email to return, but processes the received email from the previous run of the sensor.
 * Fast response times, freeing up resources more quickly.
 * Roundtrip time is calculated by examining the email headers.
 * “Missed” email responses that come in to late are automatically deleted, keeping the users mailbox cleaned up.
 * The unique identifier is not in the email subject but in the email header, reducing the chance of the email getting caught by a spam filter.


 back to [#Latest_versions: top]

=== Version history ===
====8.0.2.1 _19/04/2011_====
 * First public version

----

== !EventlogReader ==

=== Summary ===
This Custom Sensor gets the value of the most recent event log entry for the given source.

Enter the machinename, eventlog and source in the Parameters section of the Sensor Settings:

{{{
-c=   The ip-address or hostname of the computer hosting the eventlog.
-e=   The name of the eventlog.
-s=   The name of the eventlog source.
-u=   Optional, Domain\Username of a user account that can access the (remote) eventlog.
-p=   Optional, Password or PassHash * of a user account that can access the (remote) eventlog.
-m=   Optional, the maximum time in minutes a result is allowed to be old.
      default = 1 day (1440 minutes)
-t=   Optional, The EntryTypes to report on.
      Error=1, Warning=2, Information=4, SuccessAudit=8, FailureAdit=16 (default = 31)
      To report on Error AND Warning use -t=3
}}}

The download also includes the !EventlogReader.msg file.
See also: [http://code.google.com/p/prtg-addons/wiki/PTF_CS_EventlogReader Why do I need the EventlogReader.msg file]

 back to [#Latest_versions: top]

=== Version history ===

====12.2.1.1 _27/06/2012_====
 * Bugfix: Reporting on two entry types (e.g. -t=3 to report on Error AND Warning) did not work.  

====9.0.3.4 _21/03/2012_====
 * New: Added parameter -t= to only report on given EntryTypes.

====9.0.2.1 _17/12/2011_====
 * Bugfix: Targeting the localhost resulted into an error.
 * Changed: Both the long (Microsoft-Windows-Backup) and short (Backup) source names can now be used.
 * New: Added support for non existing message DLL's on the Probe system. See also: [http://code.google.com/p/prtg-addons/wiki/PTF_CS_EventlogReader Why do I need the EventlogReader.msg file]

====9.0.1.1 _14/12/2011_====
 * First public version

----

== ExternalIP ==

=== Summary ===
This Custom Sensor gets the ISP-assigned IP address of the Probe.

This sensor requires no parameters.

 back to [#Latest_versions: top]

=== Version history ===
====13.1.1.2 16/01/2013====
 * Fixed error message: "We have removed the .asp version of this script from our website"
====8.0.1.1 _19/06/2011_====
 * First public version

----

== HTTPContent ==
=== Summary ===
This Custom Sensor Checks for HTTP content changes.
If the content has changed from the previous run of the sensor, the sensor returns the value 1 else the sensor returns the value 0

Enter the url and optional proxy settings in the Parameters section of the Sensor Settings:

{{{
-u=    The url to check.
-ps=   Optional proxyserver to use connecting to the internet.
-pd=   Optional proxydomain domain name to connect to your proxyserver.
-pu=   Optional proxyuser to connect to your proxyserver.
-pp=   Optional proxypassword or passhash * to connect to your proxyserver.    
}}}


 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _17/08/2011_====
 * First public version

----

== !LogfileReader ==
=== Summary ===
This Custom Sensor returns whether a specified string occurs in a (log) file. The last occurrence is remembered, so if a new entry is made with the specified string, the sensor will recognize the new entry.

Enter the credentials (username and password), filename and searchstring in the Parameters section of the Sensor Settings:
{{{
-u=username -p=password|passhash -f="c:\file location\log.txt" -s="String to search"
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----


== !NetworkFileCount ==
=== Summary ===
This Custom Sensor returns the number of files available on a server\share.
As your PRTG server runs under the local system account it can't access files on a \\server\share. This sensor uses the given username and password of a valid user account that can access the files and returns the number of files.

Enter the credentials (username and password), folder (and optional search filter and setting to also search the sub folders) in the Parameters section of the Sensor Settings:
{{{
-f=\\myserver\myshare [-u=username] [-p=password|passhash]  [-s=*.exe] [-sub] [-t=10] [-tiw]

-f=folder          The name of the folder that needs to be checked in a \\server\share format. If the foldername contains white spaces, enter the foldername between " ".
-u=username        Optional the name of the user account that can access the share.
-p=password        Optional the password or passhash(*) of the user account that can access the share.
-t=timedelta       Optional the minimum number of minutes a file has to be old before it is counted.	
-s=searchpattern   Optional the search pattern to be used (i.e. *.txt).
-sub               Optional switch to include subfolders.
-tiw               Optional, in combination with the -t= parameter, creates a time window between the current time and xx minutes ago. Only files created in that period are counted.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1

----

== !PingMacAddress ==
=== Summary ===
Pings a MAC address and returns the time it took for the request to complete in milliseconds.
See also [http://kb.paessler.com/knowledgebase/en/topic/49153-how-can-i-ping-a-mac-address this] KB article.

{{{
-m=MAC -s=DHCPStart -e=DHCPEnd

-m=   The MAC address to ping.
-s=   The start address of the DHCP range.
-i=   The end address of the DHCP range.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====13.1.1.1 _17/03/2013_====
 * First public version

----

== !PingWarning ==
=== Summary ===
Pings a device and goes into a warning state if no reply is received.

{{{
ip-address|hostname [-w=timeout] [-l=size] [-i=TTL]

 
-w=   timeout in miliseconds to wait for a reply, default = 500
-l=   send buffer size, default = 32
-i=   Time To Live, default = 64   
}}}

 back to [#Latest_versions: top]

=== Version history ===
====12.3.1.1 _20/09/2012_====
 * Recompiled for changed error handling in PRTG 12.3.3
====8.0.1.1 _22/09/2010_====
 * First public version

----

== !PortState ==
=== Summary ===
Returns the number of seconds a TCP or UDP port is not responding.

{{{
-id=sensorID -h=hostname|ip -p=portnumber [-pt=protocoltype]

-id=  SensorID.  (typically -id=%sensorid)
-h=   Host name or IP. (typically -h=%host)
-p=   Port number.
-pt=  Optional, the protocol type to use (TCP or UDP), default = TCP.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====12.3.1.1 _20/09/2012_====
 * First public version


----

== PSx64 ==
=== Summary ===
Executes a Powershell script in 64 bit mode

{{{
-f=filename

-f=    Filename of the powershell script to execute.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====9.0.1.1 _10/02/2012_====
 * First public version

----

== !ReadFile ==
=== Summary ===
Reads a file into memory and returns the number of bytes/sec.

{{{
-f=file [-u=username] [-p=password]

-f=     The file to read.
-u=     Optional domain\user to read the file.
-p=     Optional password or passhash * to read the file.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _07/09/2011_====
 * First public version

----

== !SensorCount ==
=== Summary ===
This sensor counts the number of sensors on your PRTG server.

{{{
-s=192.168.1.1 -u=username -p=password|passhash [-ssl3] [-r=rootID]
}}}
Combine any of the following parameters
{{{
-u    count up sensors
-d    count down sensors
-a    count acknowledged down sensors
-w    count warning sensors
-n    count unusual sensors
-p    count paused sensors
-k    count unknown sensors
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.2.1 _14/03/2012_====
 * New: Added parameter -ssl3 for PRTG servers that require a ssl3 connection.
====8.0.1.1 _22/09/2010_====
 * Compiled for PRTG 8.1


----

== !SensorStatus ==
=== Summary ===
This sensor returns a warning state if a sensor state has changed into one of the given statuses.

{{{
-u=username -p=password|passhash [-s=statusses] [-r=rootID]

-u=		PRTG Username.
-p=		PRTG Password.
-s=		Optional, comma seperated list of statuses to monitor (default=7,12,13  'Paused by user', 'Paused "until' and 'Down Acknowledged'.
-r=		Optional, the rootID of the probe or group you want to monitor (default = 0).
}}}

 back to [#Latest_versions: top]

=== Version history ===
====8.0.1.1 _06/03/2011_====
 * First public version

----

== !ServiceStatus ==
=== Summary ===
Retrieves the status of a Windows service and returns a value, where

{{{
1=Stopped, 2=StartPending, 3=StopPending, 4=Running, 5=ContinuePending, 6=PausedPending, 7=Paused
}}}

{{{
-s=servicename [-m=machinename] [-u=username] [-p=password|passhash] [-w=warningstatusses] [-e=errorstatusses]

-s=   Name of the service to check.
-m=   Optional, name or ip of the machine where the service is installed. Default = localhost.
-u=   Optional Domain\Username of a user account that can access the service status.
-p=   Optional Password or passhash * of a user account that can access the service status.
-w=   Optional, comma seperated list of service statusses that will set your sensor in a warning state.
-e=   Optional, comma seperated list of service statusses that will set your sensor in an error state.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====9.0.1.1 _07/03/2012_====
 * First public version

----

== TLDomainExpiration ==
=== Summary ===
This sensor returns the number of days before a .com, .net, .org, .info, .us or .biz domain registration expires.

{{{
-u=domain

-d=    The domain name to monitor.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====13.1.1.4 _24/02/2013_====
 * Bugfix: as whois changed its output, the sensor returned "No expiration date found"
====12.4.1.3 _03/09/2012_====
 * Bugfix: the expiration date was not always correctly updated and could even show negative values. The sensor now uses a IE instance to simulate a web browser.
 * Changed: dropped the proxy parameters as any proxy settings are now taken form your IE proxy settings.
====12.2.2.2 _16/08/2012_====
 * Bugfix: some domains returned error "String was not recognized as a valid DateTime."
====12.2.1.1 _27/06/2012_====
 * First public version

----

== USBDevices ==
=== Summary ===
This sensor returns the number of connected USB storage devices.
Using limits you can get notified when a user plugges in a USB storage device.

{{{
-c=computer [-u=username] [-p=password|passhash]

-c=        The ip-address or hostname of the computer to get the number of connected USB storage devices from.
-u=        Optional the name of the user account that has access to the computer via WMI service.
-p=        Optional the password or passhash(*) of the user account that has access to the computer via WMI service.
}}}

 back to [#Latest_versions: top]

=== Version history ===
====9.0.1.1 _08/02/2012_====
 * First public version

----